 include <GameMenu/GameMenu.h>
#include <iostream>
namespace gmenu {
void Menu::
setTitle(std::string title) {		menuTitle = title;	}
This function constains the main event loop for the menu
	The actions performed : drawMenu() -> pollEvent() -> prefromAction()
	*/
	void Menu::createMenu() {
		setMenu();
		bool cont = true;
		while (window.isOpen() && cont)
		{	
			sf::Event event;
			while (window.pollEvent(event)) {
				if (event.type == sf::Event::Closed)
					window.close();
				else if (event.type == sf::Event::KeyPressed) {
					if (event.key.code == sf::Keyboard::Up) {
						currently_selected_item = (currently_selected_item + menuItems.size() - 1) % (menuItems.size());
					}
					else if (event.key.code == sf::Keyboard::Down) {
						currently_selected_item = (currently_selected_item + 1) % (menuItems.size());
					}
					else if (event.key.code == sf::Keyboard::Return) {
						cont = menuItems.at(currently_selected_item).action->start();
					}
				}
			} // while( pollEvent )
			
			window.clear();
			drawMenu();
			window.display();
		} // while window open	
	} //create menu





float x = (float)window.getSize().x * offset_coefficient + style.PaddingItems.left;
		float y = ((float)window.getSize().y) - 0.75 * menu_screen_height + block_height * 1 / 8;
		/* Calculating Menu item locations *

 for (int8_t i = 0; i < menuItems.size(); ++i) {
			coordinates crd ;
			crd.x = x;
			crd.y = y;
			item_location.push_back( crd );
			std::cout << "menu location:" << x << " " << y <<offset_coefficient<< std::endl;
			y += block_height;

		}
		
	} //setMenu()


void Menu::drawMenu() {
		writeText(menuTitle, style.ItemFont, style.TitleFontSize, title_location.x, title_location.y, style.TitleColor);
		sf::Color color = style.ItemColor;
		for (int i = 0; i < menuItems.size(); ++i)
		{
			if (i == currently_selected_item) {
				color = style.Selected;
			}
			writeText( menuItems[i].title, style.ItemFont, style.ItemFontSize, item_location[i].x, item_location[i].y, color);
			color = style.ItemColor;
		}

	} //drawMenu()



} // namespace sui
